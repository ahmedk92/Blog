# This is a basic workflow to help you get started with Actions

name: Update Readme

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [issues]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  update_readme:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/github-script@82b33c8
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const readme = await github.repos.getReadme({
              owner: context.repo.owner,
              repo: context.repo.repo
             });
             const issues = await github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo, 
              state: 'all'
             });
             var readmeContents = "";
             for (const issue of issues.data) {
              const line = "# ["+issue.title+"]("+issue.html_url+")\n\n";
              readmeContents += line;
             }
             var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(e){var t="";var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);while(f<e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(isNaN(r)){u=a=64}else if(isNaN(i)){a=64}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a)}return t},decode:function(e){var t="";var n,r,i;var s,o,u,a;var f=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(f<e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+String.fromCharCode(n);if(u!=64){t=t+String.fromCharCode(r)}if(a!=64){t=t+String.fromCharCode(i)}}t=Base64._utf8_decode(t);return t},_utf8_encode:function(e){e=e.replace(/\r\n/g,"\n");var t="";for(var n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r)}else if(r>127&&r<2048){t+=String.fromCharCode(r>>6|192);t+=String.fromCharCode(r&63|128)}else{t+=String.fromCharCode(r>>12|224);t+=String.fromCharCode(r>>6&63|128);t+=String.fromCharCode(r&63|128)}}return t},_utf8_decode:function(e){var t="";var n=0;var r=c1=c2=0;while(n<e.length){r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r);n++}else if(r>191&&r<224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&31)<<6|c2&63);n+=2}else{c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}return t}};
             
             github.repos.createOrUpdateFileContents({
              sha: readme.data.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: readme.data.path,
              message: 'Update README',
              content: Base64.encode(readmeContents),
              commiter: {
                name: 'update-readme-bot', 
                email: 'ahmedkhalaf.92@gmail.com'
              },
              author: {
                name: 'update-readme-bot',
                email: 'ahmedkhalaf.92@gmail.com' 
              }
            });
